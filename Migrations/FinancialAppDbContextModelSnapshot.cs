// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using online_personal_finance_dashboard.Data;

#nullable disable

namespace online_personal_finance_dashboard.Migrations
{
    [DbContext(typeof(FinancialAppDbContext))]
    partial class FinancialAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Budget", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<decimal?>("alert_threshold")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("budget_type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("category_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("end_date")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("start_date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__budgets__3213E83FC68C122A");

                    b.HasIndex("category_id");

                    b.HasIndex("user_id");

                    b.ToTable("budgets");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Debt", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("debt_name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("debt_type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("due_date")
                        .HasColumnType("date");

                    b.Property<decimal?>("interest_rate")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<bool?>("is_completed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("minimum_payment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("payment_frequency")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("remaining_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("total_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__debts__3213E83FE8F84B86");

                    b.HasIndex("user_id");

                    b.ToTable("debts");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Debt_payment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("debt_id")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("interest_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("payment_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("payment_date")
                        .HasColumnType("date");

                    b.Property<decimal?>("principal_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("id")
                        .HasName("PK__debt_pay__3213E83FA4BEACBA");

                    b.HasIndex("debt_id");

                    b.ToTable("debt_payments");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Expense", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("category_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("payment_method")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("transaction_date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__expenses__3213E83FFC6837CC");

                    b.HasIndex("category_id");

                    b.HasIndex("user_id");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Expense_category", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__expense___3213E83FD19938B3");

                    b.HasIndex("user_id");

                    b.ToTable("expense_categories");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Income", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("frequency")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("income_type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("received_date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__incomes__3213E83F433D8B6B");

                    b.HasIndex("user_id");

                    b.ToTable("incomes");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("asset_type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("current_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("portfolio_id")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("purchase_date")
                        .HasColumnType("date");

                    b.Property<decimal?>("purchase_price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("quantity")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("id")
                        .HasName("PK__investme__3213E83FE0A61AFE");

                    b.HasIndex("portfolio_id");

                    b.ToTable("investments");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment_portfolio", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__investme__3213E83FAEA03A6F");

                    b.HasIndex("user_id");

                    b.ToTable("investment_portfolios");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment_price_history", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("investment_id")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("recorded_date")
                        .HasColumnType("date");

                    b.HasKey("id")
                        .HasName("PK__investme__3213E83F7ADBEE21");

                    b.HasIndex("investment_id");

                    b.ToTable("investment_price_history");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Saving", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("current_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("goal_type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("is_completed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("target_amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("target_date")
                        .HasColumnType("date");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__savings__3213E83F844BBBF0");

                    b.HasIndex("user_id");

                    b.ToTable("savings");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Saving_contribution", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("contribution_date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("note")
                        .HasColumnType("text");

                    b.Property<long?>("saving_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("id")
                        .HasName("PK__saving_c__3213E83F6A979BC6");

                    b.HasIndex("saving_id");

                    b.ToTable("saving_contributions");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("first_name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("last_name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("password_hash")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("user_name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Budget", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Expense_category", "category")
                        .WithMany("budgets")
                        .HasForeignKey("category_id")
                        .HasConstraintName("FK_budgets_expense_categories");

                    b.HasOne("online_personal_finance_dashboard.Models.User", "user")
                        .WithMany("budgets")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_budgets_users");

                    b.Navigation("category");

                    b.Navigation("user");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Debt", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", "user")
                        .WithMany("debts")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_debts_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Debt_payment", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Debt", "debt")
                        .WithMany("debt_payments")
                        .HasForeignKey("debt_id")
                        .HasConstraintName("FK_debt_payments_debts");

                    b.Navigation("debt");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Expense", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Expense_category", "category")
                        .WithMany("expenses")
                        .HasForeignKey("category_id")
                        .HasConstraintName("FK_expenses_expense_categories");

                    b.HasOne("online_personal_finance_dashboard.Models.User", "user")
                        .WithMany("expenses")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_expenses_users");

                    b.Navigation("category");

                    b.Navigation("user");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Expense_category", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", "user")
                        .WithMany("expense_categories")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_expense_categories_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Income", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", "user")
                        .WithMany("incomes")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_incomes_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Investment_portfolio", "portfolio")
                        .WithMany("investments")
                        .HasForeignKey("portfolio_id")
                        .HasConstraintName("FK_investments_portfolios");

                    b.Navigation("portfolio");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment_portfolio", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", "user")
                        .WithMany("investment_portfolios")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_investment_portfolios_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment_price_history", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Investment", "investment")
                        .WithMany("investment_price_histories")
                        .HasForeignKey("investment_id")
                        .HasConstraintName("FK_investment_price_history_investments");

                    b.Navigation("investment");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Saving", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.User", "user")
                        .WithMany("savings")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_savings_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Saving_contribution", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Saving", "saving")
                        .WithMany("saving_contributions")
                        .HasForeignKey("saving_id")
                        .HasConstraintName("FK_saving_contributions_savings");

                    b.Navigation("saving");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.UserRole", b =>
                {
                    b.HasOne("online_personal_finance_dashboard.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_personal_finance_dashboard.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Debt", b =>
                {
                    b.Navigation("debt_payments");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Expense_category", b =>
                {
                    b.Navigation("budgets");

                    b.Navigation("expenses");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment", b =>
                {
                    b.Navigation("investment_price_histories");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Investment_portfolio", b =>
                {
                    b.Navigation("investments");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.Saving", b =>
                {
                    b.Navigation("saving_contributions");
                });

            modelBuilder.Entity("online_personal_finance_dashboard.Models.User", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("budgets");

                    b.Navigation("debts");

                    b.Navigation("expense_categories");

                    b.Navigation("expenses");

                    b.Navigation("incomes");

                    b.Navigation("investment_portfolios");

                    b.Navigation("savings");
                });
#pragma warning restore 612, 618
        }
    }
}
